{"version":3,"sources":["assets/img/ourgenie-logo.svg","pages/home/register/registerStyles.tsx","redux/actions/registerAction.tsx","validation/registrationValidation.tsx","components/register/user/userRegisterStyles.tsx","assets/img/photos.svg","components/register/user/userRegister.tsx","pages/home/register/register.tsx"],"names":["useStyles","makeStyles","theme","createStyles","registerHeading","color","marginBottom","paddingTop","registerHeader","zIndex","height","width","background","padding","headerContainer","breakpoints","down","breadCum","float","headerImg","registerContainer","boxShadow","border","borderRadius","containerWrapper","up","dialogContainer","textAlign","dialogContent","position","top","dialogHeading","button","letterSpacing","marginTop","marginRight","minWidth","font","imageButton","backgroundColor","textTransform","imageIcon","registerFooter","addChange","field","fieldValue","type","registerActionTypes","payload","validateEmail","emailId","validator","isEmail","domain_specific_validation","validateMobile","mobileNum","isMobilePhone","validPassword","password","passwordValue","isStrongPassword","returnScore","console","log","imageField","cancel","register","textArea","inputField","Alert","props","elevation","variant","connect","states","state","dispatch","addFiles","fieldVale","addError","removeError","addUser","userObj","a","axios","post","res","data","statusMessage","window","location","href","result","error_message","message","statusCode","value","error","removeAlert","useState","GST_certificate","profile_pic","upload","setFiles","validateField","event","action","length","isValid","target","id","handleChangeText","replace","name","handleChangeNumber","test","handleTextArea","classes","registerErrorReducer","Grid","item","sm","xs","Typography","TextField","className","userRegistrationReducer","first_name","onChange","last_name","username","error_email","helperText","onBlur","error_password","error_confirmPassword","confirmPassword","primary_phone_no","isProfessional","secondary_phone_no","select","inputProps","services","label","aria-label","TextareaAutosize","rowsMin","placeholder","container","spacing","Button","accept","style","display","multiple","fileList","files","Compressor","quality","convertSize","success","err","htmlFor","src","alt","clsx","onClick","preventDefault","formData","FormData","key","keys","append","fileReducer","disabled","loading","Snackbar","open","toggle","onClose","severity","Transition","React","forwardRef","ref","Slide","direction","setProfession","registerStyles","Box","logo","Breadcrumbs","separator","fontSize","Link","Container","fixed","align","noValidate","Dialog","TransitionComponent","maxWidth"],"mappings":"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","file":"static/js/11.0aaed630.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ourgenie-logo.efad8c78.svg\";","import {\n    Theme,\n    createStyles\n} from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme: Theme) => (\n    createStyles({\n        registerHeading: {\n            color: '#128D55',\n            marginBottom: '65px',\n            paddingTop: '15px',\n        },\n        registerHeader: {\n            zIndex: -1,\n            height: ' 252px',\n            width: '100vW',\n            background: `transparent linear-gradient(\n                180deg\n                , #0D004C 0%, #24AE90 100%) 0% 0% no-repeat padding-box`,\n            padding:'30px 0',\n        },\n        headerContainer:{\n            padding:'0 10%',\n            [theme.breakpoints.down('xs')]: {\n                padding: '0 8%',\n            },\n        },\n        breadCum:{\n            color:'white',\n            float:'right',\n            \n        },\n        headerImg:{\n            \n        },\n        registerContainer: {\n            background: ' #FFFFFF 0% 0% no-repeat padding-box !important',\n            boxShadow: ' 0px 5px 15px #00000078 !important',\n            border: '1px solid #FFFFFF !important',\n            borderRadius: ' 5px !important',\n            padding: '25px 25px',\n\n        },\n        containerWrapper: {\n            padding:'0 5%',\n            [theme.breakpoints.up('sm')]:{\n                padding:'0 15%',\n            },\n            marginTop: '-40px !important',\n            alignItems:'center',\n        },\n        dialogContainer:{\n            textAlign:'center',\n            height: '50vh'\n        },\n        dialogContent:{\n            position:'relative',\n            top:'30%',\n        },\n        dialogHeading:{\n            color:'#239c9e',\n        },\n        button: {\n            color: '#FFFFFF',\n            background: `transparent linear-gradient(\n                90deg\n                , #0D004C 0%, #24AE90 100%) 0% 0% no-repeat padding-box`,\n            borderRadius: '4px',\n            border: '2px solid #707070',\n            letterSpacing: '0px',\n            marginTop: '25px',\n            marginRight: '15px',\n            padding: ' 16px 12px !important',\n            minWidth: '120px',\n            font: `normal normal 14px/12px 'Montserrat-bold'`,\n        },\n        imageButton: {\n            width: '100%',\n            backgroundColor: ' #F1F1F1',\n            border: '1px solid #95989A !important',\n            borderRadius: ' 5px !important',\n            textTransform: 'none',\n\n        },\n        imageIcon: {\n            padding: '50px 0'\n        },\n        registerFooter: {\n            background: '#222223 0% 0% no-repeat padding-box',\n            color: '#fff',\n            padding:' 15px 0',\n            textAlign: 'center',\n    }\n    })\n)\n)\nexport default useStyles","import axios from 'axios';\nimport { AnyAction, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk'\nimport * as registerActionTypes from '../actionTypes/registernActionTypes';\ntype ThunkResult<R> = ThunkAction<any, {}, undefined, AnyAction>;\n\nexport const addChange = (field:any,fieldValue:any) =>({\n    type: registerActionTypes.ADD_CHANGE,\n    payload:{\n        field,\n        fieldValue\n    }\n})\nexport const addFiles =(field:any,fieldValue:any) =>({\n    type: registerActionTypes.ADD_FILES,\n    payload:{\n        field,\n        fieldValue\n    }\n})\nexport const addError = (field:any) =>({\n    type: registerActionTypes.ADD_ERROR,\n    payload:{\n        field\n    }\n})\n\nexport const removeError = (field:any) =>({\n    type: registerActionTypes.REMOVE_ERROR,\n    payload:{\n        field\n    }\n})\nexport const SetLoading = () =>({\n    type:typeof registerActionTypes.SET_LOADING,\n})\nexport const removeLoading = () =>({\n    type: registerActionTypes.REMOVE_LOADING,\n})\nexport const addAlert = (value) =>(\n    {type:registerActionTypes.ADD_ALERT,message:value}\n)\nexport const removeAlert = () =>(\n    {type:registerActionTypes.REMOVE_ALERT,message:\"\"}\n)\n\nexport const addUser = (userObj):ThunkResult<void> =>{\n    return async(dispatch:Dispatch) =>{\n        try{\n            dispatch({type:registerActionTypes.SET_LOADING,});\n            const res = await axios.post('https://demo.smartstorez.com/ourgeniedemo/tempapi/user-registration/',userObj);\n            console.log(res.data);\n            if(res.data.statusMessage === \"success\"){\n                console.log(\"add sucess\");\n                window.location.href=\"/login\"\n            }\n            if(res.data.statusMessage === \"failed\"){\n                console.log(res.data.result.error_message);\n                dispatch({type:registerActionTypes.ADD_ALERT,message:res.data.result.error_message})\n            }\n            if( res.data.statusCode === 300){\n                dispatch(addAlert(res.data.result.error_message))\n            }\n            dispatch({type:registerActionTypes.REMOVE_LOADING})\n        }catch(err){\n            console.error(err);\n        }\n    }\n}","import validator from 'validator';\nexport const isValid = (field: string, fieldValue: string, action: any): any => {\n    console.log(field);\n    switch (field) {\n        case \"userid\":\n            if (fieldValue !== \"\" && validateEmail(fieldValue) && fieldValue.length < 39) {\n                action.removeError(\"error_email\")\n                action.addError(\"error_validate\")\n            }\n            else {\n                action.addError(\"error_email\")\n                action.removeError(\"error_validate\")\n            }\n            break;\n        case \"mobile\":\n            if (fieldValue !== \"\" && validateMobile(fieldValue)) {\n                action.removeError(\"error_password\");\n                action.addError(\"error_validate\")\n            }\n            else {\n                action.addError(\"error_password\")\n                action.removeError(\"error_validate\")\n            }\n            break;\n        case \"password\":\n            if (fieldValue !== \"\" && (validPassword(fieldValue) && fieldValue.length < 39)) {\n                action.removeError(\"error_password\")\n                action.addError(\"error_validate\")\n            }\n            else {\n                console.log(fieldValue)\n                console.log(fieldValue.length)\n                action.addError(\"error_password\")\n                action.removeError(\"error_validate\")\n            }\n            break;\n        default:\n            return;\n    }\n}\nexport const validateEmail = (emailId: string): boolean => {\n    //console.log(validator.isEmail(emailId));\n    return validator.isEmail(emailId, { domain_specific_validation: true });\n}\nexport const validateMobile = (mobileNum: string) => {\n    return validator.isMobilePhone(\"+91\" + mobileNum, 'en-IN')\n}\nexport const validPassword = (password: string) => {\n    let passwordValue = validator.isStrongPassword(password, { returnScore: true });\n    console.log(passwordValue)\n    return passwordValue;\n}","import {\n    Theme,\n    createStyles\n} from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme: Theme) => (\n    createStyles({\n        imageField: {\n\n        },\n        button: {\n            borderRadius: '4px',\n            border: '2px solid #707070',\n            letterSpacing: '0px',\n            marginTop: '25px',\n            marginRight: '15px',\n            color: '#707070',\n            padding: ' 16px 12px !important',\n            minWidth: '120px',\n            font: `normal normal 14px/12px 'Montserrat-bold'`,\n        },\n        cancel: {\n\n        },\n        register: {\n            color: '#FFFFFF',\n            background: `transparent linear-gradient(\n                90deg\n                , #0D004C 0%, #24AE90 100%) 0% 0% no-repeat padding-box`\n        },\n        imageButton: {\n            width: '100%',\n            backgroundColor: ' #F1F1F1',\n            border: '1px solid #95989A !important',\n            borderRadius: ' 5px !important',\n            textTransform: 'none',\n\n        },\n        textArea: {\n            width: '100%',\n            '&::placeholder': {\n                padding: '10px 5px'\n            },\n            [theme.breakpoints.up('xs')]: {\n                padding: '1px',\n            },\n        },\n        inputField: {\n            width: '100%'\n        },\n        imageIcon: {\n            padding: '50px 0'\n        },\n    })\n)\n)\nexport default useStyles","export default __webpack_public_path__ + \"static/media/photos.9d905cd1.svg\";","// node modules imports\nimport { Button, Grid, TextareaAutosize, TextField, Typography, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport React, {useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport clsx from 'clsx';\nimport Compressor from 'compressorjs';\n//Actions imports\nimport {\n    addChange, addError,\n    addFiles, removeError,\n    addUser,\n    removeAlert\n} from '../../../redux/actions/registerAction';\nimport { isValid } from '../../../validation/registrationValidation';\n//styles imports        \nimport useStyles from './userRegisterStyles';\n\n//Assets imports\nimport imageIcon from '../../../assets/img/photos.svg';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nfunction UserRegister(props) {\n    // const { signup } = useAuth()\n    // const history = useHistory()\n    // const [error, setError] = useState(\"\")\n    // const [loading, setLoading] = useState(false)\n    const [upload, setFiles] = useState({\n        GST_certificate: '',\n        profile_pic: '',\n    })\n    //validation for confirm password\n    const validateConfirmPassword = (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        let password = props.state.userRegistrationReducer.password;\n        console.log(password);\n        let confirmPassword = event.target.value;\n        if ((confirmPassword !== \"\") && confirmPassword === password) {\n            props.removeError(\"error_confirmPassword\");\n            props.addError(\"error_validate\");\n        }\n        else {\n            props.addError(\"error_confirmPassword\");\n            props.removeError(\"error_validate\");\n\n        }\n    }\n\n    //validate every field on onBlur event  \n    const validateField = (event: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        let field = event.target.id;\n        let fieldVale = event.target.value;\n        isValid(field, fieldVale, props);\n    }\n\n    //change event handling for text only\n    function handleChangeText(event: React.ChangeEvent<HTMLInputElement>) {\n        let value = event.target.value;\n        value = value.replace(/[^A-Za-z]/gi, \"\");\n        console.log(event.target.name);\n        props.addChange(event.target.name, value);\n\n    }\n\n    //change event handling for numbers only\n    function handleChangeNumber(event: React.ChangeEvent<HTMLInputElement>) {\n        const regex = /^[0-9\\b]+$/;\n        const value = event.target.value;\n        if (value === '' || regex.test(value)) {\n            props.addChange(event.target.name, value);\n        }\n    }\n\n    //change event handling for both\n    function handleTextArea(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        let value = event.target.value;\n        props.addChange(event.target.id, value);\n    }\n\n    //change event for the select input\n    function handleSelect(event: React.ChangeEvent<{ name?: string; value: unknown }>) {\n        let value = event.target.value;\n        const name = event.target.name;\n        props.addChange(name, value)\n    }\n\n    //change event handle for files\n    function handleFiles(event: React.ChangeEvent<HTMLInputElement>) {\n        let target = event.target.id;\n        let fileList = event.target.files;\n        if (fileList) {\n            //compress the image \n            new Compressor(fileList[0], {\n                quality: 0.8,\n                convertSize: 1000000,\n                success(result) {\n                    props.addFiles(target, result);\n                },\n                error(err) {\n                    console.log(err.message);\n                },\n            });\n        }\n        setFiles((event) => ({ ...upload, [target]: fileList }))\n    }\n\n    //handle the submit event \n    const handleSubmit = (event) => {\n        console.log(props.state.userRegistrationReducer);\n\n        event.preventDefault();\n        const formData = new FormData();\n        for (const key in props.state.userRegistrationReducer) {\n            let keys = key;\n            let value = props.state.userRegistrationReducer[key];\n            formData.append(keys, value)\n        }\n        for (const key in props.state.fileReducer) {\n            let keys = key;\n            let value = props.state.fileReducer[key];\n            formData.append(keys, value)\n        }\n        props.addUser(formData);\n    }\n  \n    const classes = useStyles();\n      console.log(props.state.registerErrorReducer);\n    return (\n        <>\n            <Grid item sm={6} xs={12}>\n                <Typography>First Name</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"first_name\"\n                    id='first_name'\n                    value={props.state.userRegistrationReducer.first_name}\n                    onChange={handleChangeText}\n                    color=\"secondary\"\n                />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n                <Typography>Last Name</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"last_name\"\n                    id='last_name'\n                    value={props.state.userRegistrationReducer.last_name}\n                    onChange={handleChangeText}\n                    color=\"secondary\"\n                />\n            </Grid>\n            <Grid item sm={12} xs={12}>\n                <Typography>User Name</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"username\"\n                    id='username'\n                    value={props.state.userRegistrationReducer.username}\n                    onChange={handleChangeText}\n                    color=\"secondary\"\n                />\n            </Grid>\n            <Grid item sm={12} xs={12}>\n                <Typography>Email id</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"userid\"\n                    id='userid'\n                    color=\"secondary\"\n                    error={props.state.registerErrorReducer.error_email}\n                    helperText={props.state.registerErrorReducer.error_email ? \"Enter valid email\" : \"\"}\n                    onChange={handleTextArea}\n                    onBlur={validateField}\n                />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n                <Typography>Password</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"password\"\n                    type='password'\n                    id='password'\n                    onChange={handleTextArea}\n                    error={props.state.registerErrorReducer.error_password}\n                    helperText={props.state.registerErrorReducer.error_password ? \"Password should consist of one alphabet,one number,one symbol\" : \"\"}\n                    color=\"secondary\"\n                    onBlur={validateField}\n                />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n                <Typography>Confirm Password</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    id='confirmPassword'\n                    name='confirmPassword'\n                    type='password'\n                    error={props.state.registerErrorReducer.error_confirmPassword}\n                    helperText={props.state.registerErrorReducer.error_confirmPassword ? \"Required same as password\" : \"\"}\n                    onChange={handleTextArea}\n                    onBlur={validateConfirmPassword}\n                />\n            </Grid>\n\n            <Grid item sm={4} xs={12}>\n                <Typography>Phone No</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"primary_phone_no\"\n                    id='mobile'\n                    value={props.state.userRegistrationReducer.primary_phone_no}\n                    onChange={handleChangeNumber}\n                    color=\"secondary\"\n                />\n            </Grid>\n            {props.isProfessional ? <><Grid item sm={4} xs={12}>\n                <Typography>Alternative Phone No</Typography>\n                <TextField variant=\"outlined\"\n                    className={classes.inputField}\n                    name=\"secondary_phone_no\"\n                    id='Alternate_mobile'\n                    value={props.state.userRegistrationReducer.secondary_phone_no}\n                    onChange={handleChangeNumber}\n                    color=\"secondary\"\n                />\n            </Grid>\n                <Grid item sm={8} xs={12}>\n                    <Typography>Service</Typography>\n                    <TextField\n                        select\n                        variant=\"outlined\"\n                        className={classes.inputField}\n                        inputProps={{\n                            name: 'services'\n                        }}\n                        value={props.state.userRegistrationReducer.services}\n                        onChange={handleSelect}\n                        label=\"service\"\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </TextField>\n                </Grid></> : null\n            }\n            <Grid item sm={6} xs={12}>\n                <Typography>Address</Typography>\n                <TextareaAutosize className={classes.textArea}\n                    aria-label=\"minimum height\"\n                    rowsMin={11}\n                    id=\"address\"\n                    name=\"address\"\n                    placeholder='Add Your address'\n                    onChange={handleTextArea}\n                />\n            </Grid>\n            <Grid item container sm={6} spacing={2}>\n                <Grid item className={classes.imageField} sm={12} xs={12} >\n                    <Typography >Photo</Typography>\n                    <Button className={classes.imageButton}>\n                        <input\n                            accept=\"image/*\"\n                            style={{ display: \"none\" }}\n                            id=\"profile_pic\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleFiles}\n                        />\n                        <label htmlFor=\"profile_pic\">\n                            <img className={classes.imageIcon} src={imageIcon} alt=\"profile_pic\"/>\n                        </label>\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\n                <Button className={clsx(classes.button, classes.cancel)}>Cancel</Button>\n                <Button className={clsx(classes.button, classes.register)}\n                    onClick={handleSubmit}\n                    disabled={props.state.userRegistrationReducer.loading}\n                >Register</Button>\n            </Grid>\n            <Snackbar open={props.state.registerErrorReducer.message !== \"\" && props.state.registerErrorReducer.toggle} onClose={()=>{props.removeAlert()}}>\n                <Alert onClose={()=>{props.removeAlert()}} severity=\"warning\">\n                   {props.state.registerErrorReducer.message}\n        </Alert>\n            </Snackbar>\n        </>\n    )\n}\n\n//mapping the redux store state to the component\nconst mapStateToProps = (states: any) => {\n    return {\n        state: states\n    }\n}\n\n//mapping the redux dispatch action to the component\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n    return ({\n        addChange: (field: any, fieldValue: string) => dispatch(addChange(field, fieldValue)),\n        addFiles: (field: any, fieldVale: any) => dispatch(addFiles(field, fieldVale)),\n        addError: (field: any) => dispatch(addError(field)),\n        removeError: (field: any) => dispatch(removeError(field)),\n        addUser: (userObj: any) => dispatch(addUser(userObj)),\n        removeAlert:() =>dispatch(removeAlert()),\n    })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRegister);","// node module Imports\nimport React, { useState} from 'react';\nimport {\n    Container, Typography,\n    Grid, Box,\n    Breadcrumbs, Link,\n    Dialog, Button,\n    Slide,\n} from '@material-ui/core';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n// Assets  imports\nimport logo from '../../../assets/img/ourgenie-logo.svg';\n//Styles imports\nimport registerStyles from './registerStyles';\n\n//Component imports\nimport UserRegister from '../../../components/register/user/userRegister';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { addChange } from '../../../redux/actions/registerAction';\nimport { connect } from 'react-redux';\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst Register: React.FC = (props: any): JSX.Element => {\n    const [open,toggle] = useState(true);\n    const [isProfessional,setProfession]= useState(false);\n    const classes = registerStyles();\n    return (\n        <div>\n            <Grid container>\n                <Grid item className={classes.registerHeader}>\n                    <Box className={classes.headerContainer}>\n                        <img src={logo} alt=\"App Logo\" className={classes.headerImg} />\n                        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} className={classes.breadCum} >\n                            <Link color=\"inherit\" href=\"/login\">\n                                Home\n                        </Link>\n                            <Link color=\"inherit\" href=\"/getting-started/installation/\">\n                                Register\n                        </Link>\n                        </Breadcrumbs>\n                    </Box>\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                    <Box className={classes.containerWrapper}>\n                        <Container className={classes.registerContainer} fixed>\n                            <Typography align='center' variant='h2' className={classes.registerHeading}>Register</Typography>\n                            <form noValidate>\n                                <Grid container spacing={2}>\n                                    <UserRegister isProfessional={isProfessional}/>\n                                </Grid>\n                            </form>\n                        </Container>\n                    </Box>\n                </Grid>\n                <Grid item xs={12} sm={12} >\n                    <Box className={classes.registerFooter}>\n                        <Typography>@2020, Our Genie</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Dialog  open={open} TransitionComponent={Transition}>\n                <Container maxWidth='sm' className={classes.dialogContainer}>\n                    <Grid container className={classes.dialogContent}>\n                        <Grid item sm={12}>\n                            <Typography variant='h3' className={classes.dialogHeading}>May I Know Who are?</Typography>\n                        </Grid>\n                        <Grid item container sm={12}>\n                            <Grid item sm={12}>\n                                <Button className={classes.button} id='professional' onClick={()=>{ \n                                    setProfession(true);\n                                    toggle(false);\n                                    props.addChange('user_type', \"professional\")\n                                }}>Professional</Button>\n                            </Grid>\n                            <Grid item sm={12}>\n                                <Button className={classes.button} id='user' onClick={()=>{ \n                                                                        setProfession(false);\n                                                                        toggle(false);\n                                                                        props.addChange(\"user_type\", \"customer\")\n                                                                    }} \n                                >User</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Dialog>\n        </div>\n    )\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>) => {\n    return ({\n        addChange: (field: any, fieldValue: string) => dispatch(addChange(field, fieldValue)),\n    })\n}\nexport default connect(null,mapDispatchToProps)(Register);"],"sourceRoot":""}
{"version":3,"sources":["redux/actionTypes/registernActionTypes.ts","redux/actionTypes/userActionTypes.tsx","config.tsx","context/authContext.tsx","redux/reducers/registerReducer.tsx","redux/store.tsx","redux/reducers/userReducer.tsx","AppStyle.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ADD_CHANGE","ADD_FILES","ADD_ERROR","REMOVE_ERROR","SET_LOADING","REMOVE_LOADING","ADD_ALERT","REMOVE_ALERT","LOG_OUT","ADD_USER","GET_USER","ADD_LOG_ALERT","REMOVE_LOG_ALERT","fireBaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","value","signup","email","password","console","log","createUserWithEmailAndPassword","useEffect","onAuthStateChanged","user","Provider","initialState","user_type","first_name","last_name","username","primary_phone_no","address","userid","services","secondary_phone_no","initialErrorState","error_email","error_mobile","error_password","error_confirmPassword","toggle","message","fileState","profile_pic","rootReducer","combineReducers","userRegistrationReducer","state","action","type","registerActionTypes","payload","field","fieldValue","fileReducer","registerErrorReducer","userReducer","error_message","userActionTypes","store","createStore","applyMiddleware","thunk","useStyles","createMuiTheme","overrides","MuiAppBar","root","makeStyles","theme","createStyles","loadingScreen","margin","display","lodingContainer","justifyContent","alignItems","height","spinner","color","Service","lazy","Register","Login","HomePage","App","classes","className","fallback","CircularProgress","thickness","size","exact","path","component","render","window","location","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","config","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c3b183a.chunk.js","sourcesContent":["export const ADD_CHANGE = \"ADD_CHANGE\";\nexport const ADD_FILES = \"ADD_FILES\";\nexport const ADD_ERROR = \"ADD_ERROR\";\nexport const REMOVE_ERROR = \"REMOVE_ERROR\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const REMOVE_LOADING = \"REMOVE_LOADING\";\nexport const ADD_ALERT = \"ADD_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n","export const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const ADD_USER = \"ADD_USER\";\nexport const GET_USER = \"GET_USER\";\nexport const ADD_LOG_ALERT = \"ADD_LOG_ALERT\";\nexport const REMOVE_LOG_ALERT = \"REMOVE_LOG_ALERT\";","import firebase from \"firebase/app\"\nimport \"firebase/auth\"\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8eE6IMpIu2WVsqzD9mL3fNklbzQ3SMuQ\",\n  authDomain: \"service-provider-308210.firebaseapp.com\",\n  databaseURL: \"https://service-provider-308210-default-rtdb.firebaseio.com\",\n  projectId: \"service-provider-308210\",\n  storageBucket: \"service-provider-308210.appspot.com\",\n  messagingSenderId: \"298853734814\",\n  appId: \"1:298853734814:web:e83a5c1532a238b60a1e8f\"\n};\n\nconst fireBaseApp = firebase.initializeApp(firebaseConfig)\n  /*{\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n  })*/\n\n  export const auth = fireBaseApp.auth()\n  export default fireBaseApp","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../config\";\nconst AuthContext = React.createContext<any>({})\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n    const value = {\n        signup,\n    }\n    function signup(email, password) {\n        console.log(email);\n        console.log(password);\n        return auth.createUserWithEmailAndPassword(email,password)\n    }\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n          setCurrentUser(user as any );\n          setLoading(false)\n        })\n    \n        return unsubscribe\n      }, [])\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import { AnyAction } from 'redux';\nimport * as registerActionTypes from '../actionTypes/registernActionTypes';\ntype FormAction = {\n    type: string;\n    payload: {\n        field: string;\n        fieldValue: string;\n    }\n};\ninterface IUserRegiserState {\n    user_type: string;\n    first_name: String;\n    last_name: String;\n    username: String;\n    password: String;\n    primary_phone_no: String;\n    address: String;\n    userid: String;\n    services: string;\n    secondary_phone_no: string;\n}\n\nexport const initialState: IUserRegiserState = {\n    user_type: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    password: \"\",\n    primary_phone_no: \"\",\n    address: \"\",\n    userid: \"\",\n    services: \"\",\n    secondary_phone_no: \"\",\n}\n\nexport const userRegistrationReducer = (state = initialState,\n    action: AnyAction) => {\n    switch (action.type) {\n        case registerActionTypes.ADD_CHANGE:\n            return {\n                ...state,\n                [action.payload.field]: action.payload.fieldValue\n            }\n        case registerActionTypes.ADD_FILES:\n            return {\n\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport interface IErrorState {\n    error_email: boolean;\n    error_mobile: boolean;\n    error_password: boolean;\n    error_confirmPassword: boolean;\n    loading:boolean;\n    toggle: string;\n    message: string;\n}\nconst initialErrorState: IErrorState = {\n    error_email: false,\n    error_mobile: false,\n    error_password: false,\n    error_confirmPassword: false,\n    loading:false,\n    toggle: 'false',\n    message: \"\"\n}\n\nexport const registerErrorReducer = (state: IErrorState = initialErrorState,\n    action:AnyAction) => {\n    switch (action.type) {\n        case registerActionTypes.ADD_ERROR:\n            console.log(action.payload.field)\n            return {\n                ...state,\n                [action.payload.field]: true\n            }\n        case registerActionTypes.REMOVE_ERROR:\n            return {\n                ...state,\n                [action.payload.field]: false\n            }\n        case registerActionTypes.SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case registerActionTypes.REMOVE_LOADING:\n            console.log('loading remove...')\n            return {\n                ...state,\n                loading: false,\n            }\n        case registerActionTypes.ADD_ALERT:\n            console.log(action);\n            return {\n                ...state,\n                toggle:true,\n                message:action.message,\n            }\n            case registerActionTypes.REMOVE_ALERT:\n                return {\n                    ...state,\n                    toggle:false,\n                    message:action.message,\n                }\n        default:\n            return state\n    }\n}\ntype FileAction = {\n    type: string;\n    payload: {\n        field: string;\n        fieldValue: any;\n    }\n};\nexport interface IFileState {\n    profile_pic: any,\n}\nexport const fileState: IFileState = {\n    profile_pic: '',\n}\nexport const fileReducer = (\n    state: IFileState = fileState,\n    action: FileAction\n): IFileState | any => {\n\n    switch (action.type) {\n        case registerActionTypes.ADD_FILES:\n            console.log(action.payload.fieldValue);\n            return {\n                ...state,\n                [action.payload.field]: action.payload.fieldValue\n            }\n        default:\n            return state\n    }\n}","import { createStore, combineReducers,applyMiddleware, AnyAction } from 'redux';\nimport {userRegistrationReducer,fileReducer,registerErrorReducer} from './reducers/registerReducer';\nimport {userReducer } from './reducers/userReducer';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nconst rootReducer = combineReducers({\n    userRegistrationReducer,\n    fileReducer,\n    registerErrorReducer,\n    userReducer\n});\nconst store = createStore(rootReducer,applyMiddleware(thunk as ThunkMiddleware<{}, AnyAction>));\nexport default store; ","import { AnyAction } from \"redux\";\nimport * as userActionTypes from '../actionTypes/userActionTypes'\nexport const userReducer = (state = { toggle: false },\n    action: AnyAction) => {\n    console.log(action.error_message)\n    switch (action.type) {\n        case userActionTypes.ADD_LOG_ALERT:\n            return {\n                ...state,\n                toggle: true,\n                error_message: action.error_message\n            }\n        case userActionTypes.REMOVE_LOG_ALERT:\n            return {\n                ...state,\n                toggle: false,\n                error_message: \"\"\n            }\n        case userActionTypes.GET_USER:\n            return {\n\n            }\n            case userActionTypes.ADD_USER:\n                return {\n                    ...state,\n                    ...action.payload\n                }\n        default:\n            return state;\n    }\n\n}","import {\n  makeStyles,\n  createStyles,\n  createMuiTheme,\n  Theme\n} from '@material-ui/core/styles'\nimport bannerimg from '../../../assets/img/home-bg.png';\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      root: {\n\n      }\n    }\n  }\n})\nconst useStyles = makeStyles((theme: Theme) => (\n  createStyles({\n    loadingScreen: {\n      margin: 'auto',\n      display: 'felx',\n\n    },\n    lodingContainer: {\n      display: 'flex',\n      justifyContent:'center',\n      alignItems:'center',\n      height:'100vh',\n      margin: 'auto',\n    },\n    spinner: {\n      color:'#4fb25d',\n    },\n  })))\nexport default useStyles;","import React, { Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { AuthProvider } from \"./context/authContext\"\nimport store from \"./redux/store\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useStyles from './AppStyle';\n\nconst Service =React.lazy(() => import('./pages/index'));\nconst Register = React.lazy(() => import('./pages/home/register/register'))\nconst ServiceCategory = React.lazy(() => import('./pages/serviceCategory/categoryMain'))\nconst Login = React.lazy(() => import('./pages/home/login/login'))\n\nconst HomePage = React.lazy(() => import('./pages/home/main/home'));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <AuthProvider>\n            <Suspense fallback={<div className={classes.lodingContainer}>\n              <CircularProgress className={classes.spinner} thickness={4} size={50} />\n            </div>}>\n              <Switch>\n                {/* <Route exact path='/' render={ ():any=>{window.location.href='/OurGenie/home.html'}} /> */}\n                <Route exact path = '/' component={HomePage} /> \n                <Route path='/register'component={Register} />\n                <Route path='/login' component={Login} />\n                <Route path='/home' component={Service} />\n                <Route path='/companyList' render={(): any => { window.location.href = '/OurGenie/company-list.html' }} />\n              </Switch>\n            </Suspense>\n           \n          </AuthProvider>\n        </Router>\n      </div >\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import { Auth0Provider } from '@auth0/auth0-react';\nimport dotenv from 'dotenv';\nimport './index.css';\ndotenv.config();\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = 'zApgQphfDL4e57kVwNZuuL57yGR1lfX6';\n\nReactDOM.render( <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n/*\n<Auth0Provider\n  domain={domain as string}\n  clientId={clientId as string}\n  redirectUri={window.location.origin}>\n    </Auth0Provider>\n*/"],"sourceRoot":""}